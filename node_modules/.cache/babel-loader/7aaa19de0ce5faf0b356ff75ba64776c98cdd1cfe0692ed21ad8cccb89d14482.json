{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { bearerTokenAuthenticationPolicy, createEmptyPipeline, createPipelineRequest } from \"@azure/core-rest-pipeline\";\n/**\n * Returns a callback that provides a bearer token.\n * For example, the bearer token can be used to authenticate a request as follows:\n * ```ts snippet:token_provider_example\n * import { DefaultAzureCredential, getBearerTokenProvider } from \"@azure/identity\";\n * import { createPipelineRequest } from \"@azure/core-rest-pipeline\";\n *\n * const credential = new DefaultAzureCredential();\n * const scope = \"https://cognitiveservices.azure.com/.default\";\n * const getAccessToken = getBearerTokenProvider(credential, scope);\n * const token = await getAccessToken();\n * // usage\n * const request = createPipelineRequest({ url: \"https://example.com\" });\n * request.headers.set(\"Authorization\", `Bearer ${token}`);\n * ```\n *\n * @param credential - The credential used to authenticate the request.\n * @param scopes - The scopes required for the bearer token.\n * @param options - Options to configure the token provider.\n * @returns a callback that provides a bearer token.\n */\nexport function getBearerTokenProvider(credential, scopes, options) {\n  const {\n    abortSignal,\n    tracingOptions\n  } = options || {};\n  const pipeline = createEmptyPipeline();\n  pipeline.addPolicy(bearerTokenAuthenticationPolicy({\n    credential,\n    scopes\n  }));\n  async function getRefreshedToken() {\n    var _a;\n    // Create a pipeline with just the bearer token policy\n    // and run a dummy request through it to get the token\n    const res = await pipeline.sendRequest({\n      sendRequest: request => Promise.resolve({\n        request,\n        status: 200,\n        headers: request.headers\n      })\n    }, createPipelineRequest({\n      url: \"https://example.com\",\n      abortSignal,\n      tracingOptions\n    }));\n    const accessToken = (_a = res.headers.get(\"authorization\")) === null || _a === void 0 ? void 0 : _a.split(\" \")[1];\n    if (!accessToken) {\n      throw new Error(\"Failed to get access token\");\n    }\n    return accessToken;\n  }\n  return getRefreshedToken;\n}","map":{"version":3,"names":["bearerTokenAuthenticationPolicy","createEmptyPipeline","createPipelineRequest","getBearerTokenProvider","credential","scopes","options","abortSignal","tracingOptions","pipeline","addPolicy","getRefreshedToken","res","sendRequest","request","Promise","resolve","status","headers","url","accessToken","_a","get","split","Error"],"sources":["C:\\Users\\phlos\\wv-temperature-map\\src\\backend\\node_modules\\@azure\\identity\\src\\tokenProvider.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { TokenCredential, TracingContext } from \"@azure/core-auth\";\nimport {\n  bearerTokenAuthenticationPolicy,\n  createEmptyPipeline,\n  createPipelineRequest,\n} from \"@azure/core-rest-pipeline\";\n\n/**\n * The options to configure the token provider.\n */\nexport interface GetBearerTokenProviderOptions {\n  /** The abort signal to abort requests to get tokens */\n  abortSignal?: AbortSignal;\n  /** The tracing options for the requests to get tokens */\n  tracingOptions?: {\n    /**\n     * Tracing Context for the current request to get a token.\n     */\n    tracingContext?: TracingContext;\n  };\n}\n\n/**\n * Returns a callback that provides a bearer token.\n * For example, the bearer token can be used to authenticate a request as follows:\n * ```ts snippet:token_provider_example\n * import { DefaultAzureCredential, getBearerTokenProvider } from \"@azure/identity\";\n * import { createPipelineRequest } from \"@azure/core-rest-pipeline\";\n *\n * const credential = new DefaultAzureCredential();\n * const scope = \"https://cognitiveservices.azure.com/.default\";\n * const getAccessToken = getBearerTokenProvider(credential, scope);\n * const token = await getAccessToken();\n * // usage\n * const request = createPipelineRequest({ url: \"https://example.com\" });\n * request.headers.set(\"Authorization\", `Bearer ${token}`);\n * ```\n *\n * @param credential - The credential used to authenticate the request.\n * @param scopes - The scopes required for the bearer token.\n * @param options - Options to configure the token provider.\n * @returns a callback that provides a bearer token.\n */\nexport function getBearerTokenProvider(\n  credential: TokenCredential,\n  scopes: string | string[],\n  options?: GetBearerTokenProviderOptions,\n): () => Promise<string> {\n  const { abortSignal, tracingOptions } = options || {};\n  const pipeline = createEmptyPipeline();\n  pipeline.addPolicy(bearerTokenAuthenticationPolicy({ credential, scopes }));\n  async function getRefreshedToken(): Promise<string> {\n    // Create a pipeline with just the bearer token policy\n    // and run a dummy request through it to get the token\n    const res = await pipeline.sendRequest(\n      {\n        sendRequest: (request) =>\n          Promise.resolve({\n            request,\n            status: 200,\n            headers: request.headers,\n          }),\n      },\n      createPipelineRequest({\n        url: \"https://example.com\",\n        abortSignal,\n        tracingOptions,\n      }),\n    );\n    const accessToken = res.headers.get(\"authorization\")?.split(\" \")[1];\n    if (!accessToken) {\n      throw new Error(\"Failed to get access token\");\n    }\n    return accessToken;\n  }\n  return getRefreshedToken;\n}\n"],"mappings":"AAAA;AACA;AAGA,SACEA,+BAA+B,EAC/BC,mBAAmB,EACnBC,qBAAqB,QAChB,2BAA2B;AAiBlC;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAM,SAAUC,sBAAsBA,CACpCC,UAA2B,EAC3BC,MAAyB,EACzBC,OAAuC;EAEvC,MAAM;IAAEC,WAAW;IAAEC;EAAc,CAAE,GAAGF,OAAO,IAAI,EAAE;EACrD,MAAMG,QAAQ,GAAGR,mBAAmB,EAAE;EACtCQ,QAAQ,CAACC,SAAS,CAACV,+BAA+B,CAAC;IAAEI,UAAU;IAAEC;EAAM,CAAE,CAAC,CAAC;EAC3E,eAAeM,iBAAiBA,CAAA;;IAC9B;IACA;IACA,MAAMC,GAAG,GAAG,MAAMH,QAAQ,CAACI,WAAW,CACpC;MACEA,WAAW,EAAGC,OAAO,IACnBC,OAAO,CAACC,OAAO,CAAC;QACdF,OAAO;QACPG,MAAM,EAAE,GAAG;QACXC,OAAO,EAAEJ,OAAO,CAACI;OAClB;KACJ,EACDhB,qBAAqB,CAAC;MACpBiB,GAAG,EAAE,qBAAqB;MAC1BZ,WAAW;MACXC;KACD,CAAC,CACH;IACD,MAAMY,WAAW,GAAG,CAAAC,EAAA,GAAAT,GAAG,CAACM,OAAO,CAACI,GAAG,CAAC,eAAe,CAAC,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;IACnE,IAAI,CAACH,WAAW,EAAE;MAChB,MAAM,IAAII,KAAK,CAAC,4BAA4B,CAAC;IAC/C;IACA,OAAOJ,WAAW;EACpB;EACA,OAAOT,iBAAiB;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}