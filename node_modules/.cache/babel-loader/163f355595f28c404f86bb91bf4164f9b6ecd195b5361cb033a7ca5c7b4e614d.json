{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phlos\\\\wv-temperature-map\\\\src\\\\DateSelector.js\",\n  _s = $RefreshSig$();\n/**\r\n * DateSelector.js\r\n * \r\n * React component for selecting a month and year to specify a date in the format 'YYYY-MM'.\r\n * Uses dropdowns to limit user input, ensuring only valid months and years are selected.\r\n * Provides a button to trigger data fetching for the selected date.\r\n */\n\nimport React, { useState } from 'react';\n\n/**\r\n * DateSelector component for selecting a month and year.\r\n * \r\n * @component\r\n * @param {Function} onDateChange - Function to update the selected date in the parent component.\r\n * @param {Function} fetchTemperatureData - Function to fetch temperature data based on the selected date.\r\n * @returns {JSX.Element} A date selector with month and year dropdowns and a fetch button.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DateSelector({\n  onDateChange,\n  fetchTemperatureData\n}) {\n  _s();\n  const [month, setMonth] = useState('');\n  const [year, setYear] = useState('');\n\n  // Define the range of years (1951 to the current year)\n  const endYear = 2022;\n  const startYear = 1951;\n\n  /**\r\n   * handleMonthChange\r\n   * \r\n   * Updates the selected month and triggers the onDateChange function if both month and year are selected.\r\n   * \r\n   * @param {Object} e - The change event triggered by the month dropdown.\r\n   */\n  const handleMonthChange = e => {\n    setMonth(e.target.value);\n    if (year) onDateChange(`${year}-${e.target.value}-01`);\n  };\n\n  /**\r\n   * handleYearChange\r\n   * \r\n   * Updates the selected year and triggers the onDateChange function if both month and year are selected.\r\n   * \r\n   * @param {Object} e - The change event triggered by the year dropdown.\r\n   */\n  const handleYearChange = e => {\n    setYear(e.target.value);\n    if (month) onDateChange(`${e.target.value}-${month}-01`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Month:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: month,\n      onChange: handleMonthChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), Array.from({\n        length: 12\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: String(i + 1).padStart(2, '0'),\n        children: new Date(0, i).toLocaleString('en', {\n          month: 'long'\n        })\n      }, i + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Year:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: year,\n      onChange: handleYearChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), Array.from({\n        length: endYear - startYear + 1\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: startYear + i,\n        children: startYear + i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTemperatureData,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(DateSelector, \"1ree44Kjf2xp2bWVzBK4M2HVqfc=\");\n_c = DateSelector;\nexport default DateSelector;\nvar _c;\n$RefreshReg$(_c, \"DateSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DateSelector","onDateChange","fetchTemperatureData","_s","month","setMonth","year","setYear","endYear","startYear","handleMonthChange","e","target","value","handleYearChange","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","Array","from","length","_","i","String","padStart","Date","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/phlos/wv-temperature-map/src/DateSelector.js"],"sourcesContent":["/**\r\n * DateSelector.js\r\n * \r\n * React component for selecting a month and year to specify a date in the format 'YYYY-MM'.\r\n * Uses dropdowns to limit user input, ensuring only valid months and years are selected.\r\n * Provides a button to trigger data fetching for the selected date.\r\n */\r\n\r\nimport React, { useState } from 'react';\r\n\r\n/**\r\n * DateSelector component for selecting a month and year.\r\n * \r\n * @component\r\n * @param {Function} onDateChange - Function to update the selected date in the parent component.\r\n * @param {Function} fetchTemperatureData - Function to fetch temperature data based on the selected date.\r\n * @returns {JSX.Element} A date selector with month and year dropdowns and a fetch button.\r\n */\r\nfunction DateSelector({ onDateChange, fetchTemperatureData }) {\r\n  const [month, setMonth] = useState('');\r\n  const [year, setYear] = useState('');\r\n\r\n  // Define the range of years (1951 to the current year)\r\n  const endYear = 2022;\r\n  const startYear = 1951;\r\n\r\n  /**\r\n   * handleMonthChange\r\n   * \r\n   * Updates the selected month and triggers the onDateChange function if both month and year are selected.\r\n   * \r\n   * @param {Object} e - The change event triggered by the month dropdown.\r\n   */\r\n  const handleMonthChange = (e) => {\r\n    setMonth(e.target.value);\r\n    if (year) onDateChange(`${year}-${e.target.value}-01`);\r\n  };\r\n\r\n  /**\r\n   * handleYearChange\r\n   * \r\n   * Updates the selected year and triggers the onDateChange function if both month and year are selected.\r\n   * \r\n   * @param {Object} e - The change event triggered by the year dropdown.\r\n   */\r\n  const handleYearChange = (e) => {\r\n    setYear(e.target.value);\r\n    if (month) onDateChange(`${e.target.value}-${month}-01`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Month Dropdown */}\r\n      <label>Month:</label>\r\n      <select value={month} onChange={handleMonthChange}>\r\n        <option value=\"\" disabled>Select month</option>\r\n        {Array.from({ length: 12 }, (_, i) => (\r\n          <option key={i + 1} value={String(i + 1).padStart(2, '0')}>\r\n            {new Date(0, i).toLocaleString('en', { month: 'long' })}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Year Dropdown */}\r\n      <label>Year:</label>\r\n      <select value={year} onChange={handleYearChange}>\r\n        <option value=\"\" disabled>Select year</option>\r\n        {Array.from({ length: endYear - startYear + 1 }, (_, i) => (\r\n          <option key={i} value={startYear + i}>\r\n            {startYear + i}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Fetch Data Button */}\r\n      <button onClick={fetchTemperatureData}>Fetch Data</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DateSelector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}