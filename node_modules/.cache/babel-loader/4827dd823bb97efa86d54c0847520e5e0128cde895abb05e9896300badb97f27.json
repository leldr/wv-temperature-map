{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _helpers = require(\"./helpers\");\nvar _token = require(\"./token\");\n// s2.2.7.16\n\nfunction returnStatusParser(buf, offset, _options) {\n  let value;\n  ({\n    value,\n    offset\n  } = (0, _helpers.readInt32LE)(buf, offset));\n  return new _helpers.Result(new _token.ReturnStatusToken(value), offset);\n}\nvar _default = exports.default = returnStatusParser;\nmodule.exports = returnStatusParser;","map":{"version":3,"names":["_helpers","require","_token","returnStatusParser","buf","offset","_options","value","readInt32LE","Result","ReturnStatusToken","_default","exports","default","module"],"sources":["C:\\Users\\phlos\\wv-temperature-map\\src\\backend\\node_modules\\tedious\\src\\token\\returnstatus-token-parser.ts"],"sourcesContent":["// s2.2.7.16\nimport { readInt32LE, Result } from './helpers';\nimport { type ParserOptions } from './stream-parser';\n\nimport { ReturnStatusToken } from './token';\n\nfunction returnStatusParser(buf: Buffer, offset: number, _options: ParserOptions): Result<ReturnStatusToken> {\n  let value;\n  ({ value, offset } = readInt32LE(buf, offset));\n  return new Result(new ReturnStatusToken(value), offset);\n}\n\nexport default returnStatusParser;\nmodule.exports = returnStatusParser;\n"],"mappings":";;;;;;AACA,IAAAA,QAAA,GAAAC,OAAA;AAGA,IAAAC,MAAA,GAAAD,OAAA;AAJA;;AAMA,SAASE,kBAAkBA,CAACC,GAAW,EAAEC,MAAc,EAAEC,QAAuB,EAA6B;EAC3G,IAAIC,KAAK;EACT,CAAC;IAAEA,KAAK;IAAEF;EAAO,CAAC,GAAG,IAAAL,QAAA,CAAAQ,WAAW,EAACJ,GAAG,EAAEC,MAAM,CAAC;EAC7C,OAAO,IAAIL,QAAA,CAAAS,MAAM,CAAC,IAAIP,MAAA,CAAAQ,iBAAiB,CAACH,KAAK,CAAC,EAAEF,MAAM,CAAC;AACzD;AAAC,IAAAM,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcV,kBAAkB;AACjCW,MAAM,CAACF,OAAO,GAAGT,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}