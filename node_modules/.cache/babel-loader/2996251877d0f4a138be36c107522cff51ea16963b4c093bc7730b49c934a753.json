{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phlos\\\\wv-temperature-map\\\\src\\\\DateSelector.js\",\n  _s = $RefreshSig$();\n/**\r\n * DateSelector.js\r\n * \r\n * Component for selecting a date limited to the first day of the selected month and year.\r\n * Only allows month and year selection, from 1951 to the current year.\r\n */\n\nimport React, { useState } from 'react';\n\n/**\r\n * DateSelector Component\r\n * \r\n * Allows users to select a date by month and year only, automatically setting the date to\r\n * the first day of the chosen month. Includes a button to fetch data.\r\n * \r\n * @component\r\n * @param {function} fetchTemperatureData - Function to fetch temperature data for the selected date.\r\n * @returns {JSX.Element} Month and year selector with fetch button.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DateSelector({\n  fetchTemperatureData\n}) {\n  _s();\n  const today = new Date();\n  const currentYear = today.getFullYear();\n  const years = Array.from({\n    length: currentYear - 1950\n  }, (_, i) => 1951 + i); // Years from 1951 to current year\n\n  const [selectedMonth, setSelectedMonth] = useState(today.getMonth() + 1); // Default to current month\n  const [selectedYear, setSelectedYear] = useState(currentYear); // Default to current year\n\n  /**\r\n   * handleFetchData\r\n   * \r\n   * Constructs a date string for the first of the selected month and year, and triggers data fetch.\r\n   */\n  const handleFetchData = () => {\n    const date = `${selectedYear}-${String(selectedMonth).padStart(2, '0')}-01`;\n    fetchTemperatureData(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select Month and Year: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedMonth,\n      onChange: e => setSelectedMonth(Number(e.target.value)),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"January\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"February\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"3\",\n        children: \"March\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"4\",\n        children: \"April\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"5\",\n        children: \"May\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"6\",\n        children: \"June\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"7\",\n        children: \"July\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"8\",\n        children: \"August\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"9\",\n        children: \"September\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"10\",\n        children: \"October\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"11\",\n        children: \"November\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"12\",\n        children: \"December\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedYear,\n      onChange: e => setSelectedYear(Number(e.target.value)),\n      children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: year,\n        children: year\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchData,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(DateSelector, \"VXh66aviP2gLDeI4ozy9/ANOxc4=\");\n_c = DateSelector;\nexport default DateSelector;\nvar _c;\n$RefreshReg$(_c, \"DateSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DateSelector","fetchTemperatureData","_s","today","Date","currentYear","getFullYear","years","Array","from","length","_","i","selectedMonth","setSelectedMonth","getMonth","selectedYear","setSelectedYear","handleFetchData","date","String","padStart","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","Number","target","map","year","onClick","_c","$RefreshReg$"],"sources":["C:/Users/phlos/wv-temperature-map/src/DateSelector.js"],"sourcesContent":["/**\r\n * DateSelector.js\r\n * \r\n * Component for selecting a date limited to the first day of the selected month and year.\r\n * Only allows month and year selection, from 1951 to the current year.\r\n */\r\n\r\nimport React, { useState } from 'react';\r\n\r\n/**\r\n * DateSelector Component\r\n * \r\n * Allows users to select a date by month and year only, automatically setting the date to\r\n * the first day of the chosen month. Includes a button to fetch data.\r\n * \r\n * @component\r\n * @param {function} fetchTemperatureData - Function to fetch temperature data for the selected date.\r\n * @returns {JSX.Element} Month and year selector with fetch button.\r\n */\r\nfunction DateSelector({ fetchTemperatureData }) {\r\n    const today = new Date();\r\n    const currentYear = today.getFullYear();\r\n    const years = Array.from({ length: currentYear - 1950 }, (_, i) => 1951 + i); // Years from 1951 to current year\r\n\r\n    const [selectedMonth, setSelectedMonth] = useState(today.getMonth() + 1); // Default to current month\r\n    const [selectedYear, setSelectedYear] = useState(currentYear); // Default to current year\r\n\r\n    /**\r\n     * handleFetchData\r\n     * \r\n     * Constructs a date string for the first of the selected month and year, and triggers data fetch.\r\n     */\r\n    const handleFetchData = () => {\r\n        const date = `${selectedYear}-${String(selectedMonth).padStart(2, '0')}-01`;\r\n        fetchTemperatureData(date);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label>Select Month and Year: </label>\r\n            <select\r\n                value={selectedMonth}\r\n                onChange={(e) => setSelectedMonth(Number(e.target.value))}\r\n            >\r\n                <option value=\"1\">January</option>\r\n                <option value=\"2\">February</option>\r\n                <option value=\"3\">March</option>\r\n                <option value=\"4\">April</option>\r\n                <option value=\"5\">May</option>\r\n                <option value=\"6\">June</option>\r\n                <option value=\"7\">July</option>\r\n                <option value=\"8\">August</option>\r\n                <option value=\"9\">September</option>\r\n                <option value=\"10\">October</option>\r\n                <option value=\"11\">November</option>\r\n                <option value=\"12\">December</option>\r\n            </select>\r\n            <select\r\n                value={selectedYear}\r\n                onChange={(e) => setSelectedYear(Number(e.target.value))}\r\n            >\r\n                {years.map((year) => (\r\n                    <option key={year} value={year}>{year}</option>\r\n                ))}\r\n            </select>\r\n            <button onClick={handleFetchData}>Fetch Data</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DateSelector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}