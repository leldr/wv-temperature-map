{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phlos\\\\wv-temperature-map\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\n/**\r\n * MapComponent.js\r\n * \r\n * React component that renders a heatmap for temperature data using the Leaflet library.\r\n * The heatmap includes a detailed 10-color gradient scale for better visualization.\r\n */\n\nimport React from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet.heat';\nimport { useEffect } from 'react';\n\n/**\r\n * MapComponent\r\n * \r\n * Renders a heatmap with temperature data overlaid on a map.\r\n * \r\n * @component\r\n * @param {Object[]} [temperatureData=[]] - Array of objects with latitude, longitude, and tavg values.\r\n * @returns {JSX.Element} A map with a heatmap overlay.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapComponent({\n  temperatureData = []\n}) {\n  _s();\n  const center = [38.5976, -80.4549]; // Center of WV\n\n  useEffect(() => {\n    // Add heatmap layer after the component mounts\n    const L = require('leaflet');\n    require('leaflet.heat');\n    const map = L.map('heatmap').setView(center, 7);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n\n    // Convert temperature data to heatmap points ([lat, lon, intensity])\n    const heatmapData = temperatureData.map(point => [point.latitude, point.longitude, point.tavg // Use temperature as intensity\n    ]);\n\n    // Create a heatmap layer with an extended 10-color gradient\n    L.heatLayer(heatmapData, {\n      radius: 25,\n      // Adjust radius for spread\n      blur: 20,\n      // Adjust blur for smoothness\n      maxZoom: 10,\n      gradient: {\n        0.0: 'purple',\n        0.1: 'blue',\n        0.2: 'cyan',\n        0.3: 'lime',\n        0.4: 'green',\n        0.5: 'yellow',\n        0.6: 'orange',\n        0.7: 'red',\n        0.8: 'darkred',\n        1.0: 'black'\n      }\n    }).addTo(map);\n  }, [temperatureData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"heatmap\",\n    style: {\n      height: '500px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","MapComponent","temperatureData","_s","center","L","require","map","setView","tileLayer","attribution","addTo","heatmapData","point","latitude","longitude","tavg","heatLayer","radius","blur","maxZoom","gradient","id","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/phlos/wv-temperature-map/src/MapComponent.js"],"sourcesContent":["/**\r\n * MapComponent.js\r\n * \r\n * React component that renders a heatmap for temperature data using the Leaflet library.\r\n * The heatmap includes a detailed 10-color gradient scale for better visualization.\r\n */\r\n\r\nimport React from 'react';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet.heat';\r\nimport { useEffect } from 'react';\r\n\r\n/**\r\n * MapComponent\r\n * \r\n * Renders a heatmap with temperature data overlaid on a map.\r\n * \r\n * @component\r\n * @param {Object[]} [temperatureData=[]] - Array of objects with latitude, longitude, and tavg values.\r\n * @returns {JSX.Element} A map with a heatmap overlay.\r\n */\r\nfunction MapComponent({ temperatureData = [] }) {\r\n  const center = [38.5976, -80.4549]; // Center of WV\r\n\r\n  useEffect(() => {\r\n    // Add heatmap layer after the component mounts\r\n    const L = require('leaflet');\r\n    require('leaflet.heat');\r\n\r\n    const map = L.map('heatmap').setView(center, 7);\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n    }).addTo(map);\r\n\r\n    // Convert temperature data to heatmap points ([lat, lon, intensity])\r\n    const heatmapData = temperatureData.map((point) => [\r\n      point.latitude,\r\n      point.longitude,\r\n      point.tavg, // Use temperature as intensity\r\n    ]);\r\n\r\n    // Create a heatmap layer with an extended 10-color gradient\r\n    L.heatLayer(heatmapData, {\r\n      radius: 25, // Adjust radius for spread\r\n      blur: 20,   // Adjust blur for smoothness\r\n      maxZoom: 10,\r\n      gradient: {\r\n        0.0: 'purple',\r\n        0.1: 'blue',\r\n        0.2: 'cyan',\r\n        0.3: 'lime',\r\n        0.4: 'green',\r\n        0.5: 'yellow',\r\n        0.6: 'orange',\r\n        0.7: 'red',\r\n        0.8: 'darkred',\r\n        1.0: 'black',\r\n      },\r\n    }).addTo(map);\r\n  }, [temperatureData]);\r\n\r\n  return (\r\n    <div id=\"heatmap\" style={{ height: '500px', width: '100%' }}></div>\r\n  );\r\n}\r\n\r\nexport default MapComponent;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AACjC,OAAO,cAAc;AACrB,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,SAAAC,MAAA,IAAAC,OAAA;AASA,SAASC,YAAYA,CAAC;EAAEC,eAAe,GAAG;AAAG,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;;EAEpCN,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;IAC5BA,OAAO,CAAC,cAAc,CAAC;IAEvB,MAAMC,GAAG,GAAGF,CAAC,CAACE,GAAG,CAAC,SAAS,CAAC,CAACC,OAAO,CAACJ,MAAM,EAAE,CAAC,CAAC;IAC/CC,CAAC,CAACI,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EAAE;IACf,CAAC,CAAC,CAACC,KAAK,CAACJ,GAAG,CAAC;;IAEb;IACA,MAAMK,WAAW,GAAGV,eAAe,CAACK,GAAG,CAAEM,KAAK,IAAK,CACjDA,KAAK,CAACC,QAAQ,EACdD,KAAK,CAACE,SAAS,EACfF,KAAK,CAACG,IAAI,CAAE;IAAA,CACb,CAAC;;IAEF;IACAX,CAAC,CAACY,SAAS,CAACL,WAAW,EAAE;MACvBM,MAAM,EAAE,EAAE;MAAE;MACZC,IAAI,EAAE,EAAE;MAAI;MACZC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;QACR,GAAG,EAAE,QAAQ;QACb,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,OAAO;QACZ,GAAG,EAAE,QAAQ;QACb,GAAG,EAAE,QAAQ;QACb,GAAG,EAAE,KAAK;QACV,GAAG,EAAE,SAAS;QACd,GAAG,EAAE;MACP;IACF,CAAC,CAAC,CAACV,KAAK,CAACJ,GAAG,CAAC;EACf,CAAC,EAAE,CAACL,eAAe,CAAC,CAAC;EAErB,oBACEF,OAAA;IAAKsB,EAAE,EAAC,SAAS;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEvE;AAAC1B,EAAA,CA3CQF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AA6CrB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}