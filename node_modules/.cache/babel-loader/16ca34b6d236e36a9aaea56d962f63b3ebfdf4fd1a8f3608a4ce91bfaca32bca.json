{"ast":null,"code":"/**\r\n * config.js\r\n * \r\n * This file exports the database configuration for Azure SQL and the connectDB \r\n * function, which establishes the connection. It uses environment variables \r\n * for sensitive data.\r\n */\n\nrequire('dotenv').config();\nconst sql = require('mssql');\n\n// Database configuration object using environment variables for security\nconst dbConfig = {\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  server: process.env.DB_SERVER,\n  database: process.env.DB_DATABASE,\n  options: {\n    encrypt: true,\n    // Enables encryption for Azure SQL\n    enableArithAbort: true\n  }\n};\n\n/**\r\n * Establishes a connection to the Azure SQL database.\r\n * Logs a success or error message depending on the connection status.\r\n */\nconst connectDB = async () => {\n  try {\n    await sql.connect(dbConfig);\n    console.log(\"Connected to Azure SQL Database\");\n  } catch (error) {\n    console.error(\"Database connection failed:\", error);\n  }\n};\nmodule.exports = {\n  sql,\n  connectDB\n};","map":{"version":3,"names":["require","config","sql","dbConfig","user","process","env","DB_USER","password","DB_PASSWORD","server","DB_SERVER","database","DB_DATABASE","options","encrypt","enableArithAbort","connectDB","connect","console","log","error","module","exports"],"sources":["C:/Users/phlos/wv-temperature-map/src/backend/config.js"],"sourcesContent":["/**\r\n * config.js\r\n * \r\n * This file exports the database configuration for Azure SQL and the connectDB \r\n * function, which establishes the connection. It uses environment variables \r\n * for sensitive data.\r\n */\r\n\r\nrequire('dotenv').config();\r\nconst sql = require('mssql');\r\n\r\n// Database configuration object using environment variables for security\r\nconst dbConfig = {\r\n  user: process.env.DB_USER,\r\n  password: process.env.DB_PASSWORD,\r\n  server: process.env.DB_SERVER,\r\n  database: process.env.DB_DATABASE,\r\n  options: {\r\n    encrypt: true, // Enables encryption for Azure SQL\r\n    enableArithAbort: true,\r\n  },\r\n};\r\n\r\n/**\r\n * Establishes a connection to the Azure SQL database.\r\n * Logs a success or error message depending on the connection status.\r\n */\r\nconst connectDB = async () => {\r\n  try {\r\n    await sql.connect(dbConfig);\r\n    console.log(\"Connected to Azure SQL Database\");\r\n  } catch (error) {\r\n    console.error(\"Database connection failed:\", error);\r\n  }\r\n};\r\n\r\nmodule.exports = { sql, connectDB };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC;AAC1B,MAAMC,GAAG,GAAGF,OAAO,CAAC,OAAO,CAAC;;AAE5B;AACA,MAAMG,QAAQ,GAAG;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,OAAO;EACzBC,QAAQ,EAAEH,OAAO,CAACC,GAAG,CAACG,WAAW;EACjCC,MAAM,EAAEL,OAAO,CAACC,GAAG,CAACK,SAAS;EAC7BC,QAAQ,EAAEP,OAAO,CAACC,GAAG,CAACO,WAAW;EACjCC,OAAO,EAAE;IACPC,OAAO,EAAE,IAAI;IAAE;IACfC,gBAAgB,EAAE;EACpB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC5B,IAAI;IACF,MAAMf,GAAG,CAACgB,OAAO,CAACf,QAAQ,CAAC;IAC3BgB,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACrD;AACF,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG;EAAErB,GAAG;EAAEe;AAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}