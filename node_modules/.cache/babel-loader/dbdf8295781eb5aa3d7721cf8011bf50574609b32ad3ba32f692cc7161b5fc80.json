{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phlos\\\\wv-temperature-map\\\\src\\\\DateSelector.js\",\n  _s = $RefreshSig$();\n// Import necessary hooks and dependencies\nimport React, { useState } from 'react';\n\n/**\r\n * DateSelector component allows the user to pick a date.\r\n * \r\n * @param {Function} onDateChange - Function to update the date in MapPage.\r\n * @param {Function} fetchTemperatureData - Function to fetch data when the button is clicked.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DateSelector({\n  onDateChange,\n  fetchTemperatureData\n}) {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(''); // Local date state for this component\n\n  /**\r\n   * Handles date selection, updating both the local state and MapPage state.\r\n   * @param {Event} e - Change event for date input.\r\n   */\n  const handleDateChange = e => {\n    const newDate = e.target.value;\n    setSelectedDate(newDate);\n    onDateChange(newDate); // Update the date in MapPage.js\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"month\",\n      value: selectedDate,\n      onChange: handleDateChange,\n      min: \"1951-01\",\n      max: `${new Date().getFullYear()}-12`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTemperatureData,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(DateSelector, \"fv9iQcyB6nsyZauyDzuMkH9P5xs=\");\n_c = DateSelector;\nexport default DateSelector;\nvar _c;\n$RefreshReg$(_c, \"DateSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DateSelector","onDateChange","fetchTemperatureData","_s","selectedDate","setSelectedDate","handleDateChange","e","newDate","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","max","Date","getFullYear","onClick","_c","$RefreshReg$"],"sources":["C:/Users/phlos/wv-temperature-map/src/DateSelector.js"],"sourcesContent":["// Import necessary hooks and dependencies\r\nimport React, { useState } from 'react';\r\n\r\n/**\r\n * DateSelector component allows the user to pick a date.\r\n * \r\n * @param {Function} onDateChange - Function to update the date in MapPage.\r\n * @param {Function} fetchTemperatureData - Function to fetch data when the button is clicked.\r\n */\r\nfunction DateSelector({ onDateChange, fetchTemperatureData }) {\r\n  const [selectedDate, setSelectedDate] = useState(''); // Local date state for this component\r\n\r\n  /**\r\n   * Handles date selection, updating both the local state and MapPage state.\r\n   * @param {Event} e - Change event for date input.\r\n   */\r\n  const handleDateChange = (e) => {\r\n    const newDate = e.target.value;\r\n    setSelectedDate(newDate);\r\n    onDateChange(newDate); // Update the date in MapPage.js\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>Select Date:</label>\r\n      <input\r\n        type=\"month\"\r\n        value={selectedDate}\r\n        onChange={handleDateChange}\r\n        min=\"1951-01\" \r\n        max={`${new Date().getFullYear()}-12`}\r\n      />\r\n      <button onClick={fetchTemperatureData}>Fetch Data</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DateSelector;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,SAASC,YAAYA,CAAC;EAAEC,YAAY;EAAEC;AAAqB,CAAC,EAAE;EAAAC,EAAA;EAC5D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtD;AACF;AACA;AACA;EACE,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC9BL,eAAe,CAACG,OAAO,CAAC;IACxBP,YAAY,CAACO,OAAO,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACET,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAO;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3BhB,OAAA;MACEiB,IAAI,EAAC,OAAO;MACZN,KAAK,EAAEN,YAAa;MACpBa,QAAQ,EAAEX,gBAAiB;MAC3BY,GAAG,EAAC,SAAS;MACbC,GAAG,EAAE,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACFhB,OAAA;MAAQuB,OAAO,EAAEpB,oBAAqB;MAAAS,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV;AAACZ,EAAA,CA1BQH,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AA4BrB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}