{"ast":null,"code":"var _s = $RefreshSig$();\n/**\r\n * MapComponent.js\r\n * \r\n * React component that renders a heatmap for temperature data using the Leaflet library.\r\n * The heatmap includes a detailed 10-color gradient scale for better visualization.\r\n */\n\nimport React, { useEffect } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet.heat';\n\n/**\r\n * MapComponent\r\n * \r\n * Renders a heatmap with temperature data overlaid on a map.\r\n * \r\n * @component\r\n * @param {Object[]} [temperatureData=[]] - Array of objects with latitude, longitude, and tavg values.\r\n * @returns {JSX.Element} A map with a heatmap overlay.\r\n */\nfunction MapComponent({\n  temperatureData = []\n}) {\n  _s();\n  // Center coordinates for the map (centered on West Virginia)\n  const center = [38.5976, -80.4549]; // Latitude and longitude for WV center\n\n  useEffect(() => {\n    // Import Leaflet library dynamically to avoid server-side rendering issues\n    const L = require('leaflet');\n    require('leaflet.heat');\n\n    // Initialize the map only once\n    const map = L.map('heatmap').setView(center, 7); // Set initial view and zoom level\n\n    // Add OpenStreetMap tile layer to the map\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n\n    // Transform temperature data into heatmap points ([latitude, longitude, intensity])\n    const heatmapData = temperatureData.map(point => [point.latitude, point.longitude, normalizeTemperature(point.tavg) // Normalize temperature for consistent intensity\n    ]);\n\n    // Add heatmap layer to the map\n    L.heatLayer(heatmapData, {\n      radius: 25,\n      // Set radius of heatmap points\n      blur: 20,\n      // Adjust blur for smooth transitions\n      maxZoom: 10,\n      // Maximum zoom level for heatmap rendering\n      gradient: {\n        0.0: 'purple',\n        0.1: 'blue',\n        0.2: 'cyan',\n        0.3: 'lime',\n        0.4: 'green',\n        0.5: 'yellow',\n        0.6: 'orange',\n        0.7: 'red',\n        0.8: 'darkred',\n        1.0: 'black'\n      }\n    }).addTo(map);\n\n    // Cleanup function to remove map on component unmount\n    return () => {\n      map.remove();\n    };\n  }, [temperatureData, center]); // Include center as a dependency to address the ESLint warning\n}\n_s(MapComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","MapComponent","temperatureData","_s","center","L","require","map","setView","tileLayer","attribution","addTo","heatmapData","point","latitude","longitude","normalizeTemperature","tavg","heatLayer","radius","blur","maxZoom","gradient","remove","_c","$RefreshReg$"],"sources":["C:/Users/phlos/wv-temperature-map/src/MapComponent.js"],"sourcesContent":["/**\r\n * MapComponent.js\r\n * \r\n * React component that renders a heatmap for temperature data using the Leaflet library.\r\n * The heatmap includes a detailed 10-color gradient scale for better visualization.\r\n */\r\n\r\nimport React, { useEffect } from 'react';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet.heat';\r\n\r\n/**\r\n * MapComponent\r\n * \r\n * Renders a heatmap with temperature data overlaid on a map.\r\n * \r\n * @component\r\n * @param {Object[]} [temperatureData=[]] - Array of objects with latitude, longitude, and tavg values.\r\n * @returns {JSX.Element} A map with a heatmap overlay.\r\n */\r\nfunction MapComponent({ temperatureData = [] }) {\r\n    // Center coordinates for the map (centered on West Virginia)\r\n    const center = [38.5976, -80.4549]; // Latitude and longitude for WV center\r\n  \r\n    useEffect(() => {\r\n      // Import Leaflet library dynamically to avoid server-side rendering issues\r\n      const L = require('leaflet');\r\n      require('leaflet.heat');\r\n  \r\n      // Initialize the map only once\r\n      const map = L.map('heatmap').setView(center, 7); // Set initial view and zoom level\r\n  \r\n      // Add OpenStreetMap tile layer to the map\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n      }).addTo(map);\r\n  \r\n      // Transform temperature data into heatmap points ([latitude, longitude, intensity])\r\n      const heatmapData = temperatureData.map((point) => [\r\n        point.latitude,\r\n        point.longitude,\r\n        normalizeTemperature(point.tavg), // Normalize temperature for consistent intensity\r\n      ]);\r\n  \r\n      // Add heatmap layer to the map\r\n      L.heatLayer(heatmapData, {\r\n        radius: 25, // Set radius of heatmap points\r\n        blur: 20,   // Adjust blur for smooth transitions\r\n        maxZoom: 10, // Maximum zoom level for heatmap rendering\r\n        gradient: {\r\n          0.0: 'purple',\r\n          0.1: 'blue',\r\n          0.2: 'cyan',\r\n          0.3: 'lime',\r\n          0.4: 'green',\r\n          0.5: 'yellow',\r\n          0.6: 'orange',\r\n          0.7: 'red',\r\n          0.8: 'darkred',\r\n          1.0: 'black',\r\n        },\r\n      }).addTo(map);\r\n  \r\n      // Cleanup function to remove map on component unmount\r\n      return () => {\r\n        map.remove();\r\n      };\r\n    }, [temperatureData, center]); // Include center as a dependency to address the ESLint warning\r\n}\r\n\r\nexport default MapComponent;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,0BAA0B;AACjC,OAAO,cAAc;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAAC;EAAEC,eAAe,GAAG;AAAG,CAAC,EAAE;EAAAC,EAAA;EAC5C;EACA,MAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;;EAEpCJ,SAAS,CAAC,MAAM;IACd;IACA,MAAMK,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;IAC5BA,OAAO,CAAC,cAAc,CAAC;;IAEvB;IACA,MAAMC,GAAG,GAAGF,CAAC,CAACE,GAAG,CAAC,SAAS,CAAC,CAACC,OAAO,CAACJ,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;;IAEjD;IACAC,CAAC,CAACI,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EAAE;IACf,CAAC,CAAC,CAACC,KAAK,CAACJ,GAAG,CAAC;;IAEb;IACA,MAAMK,WAAW,GAAGV,eAAe,CAACK,GAAG,CAAEM,KAAK,IAAK,CACjDA,KAAK,CAACC,QAAQ,EACdD,KAAK,CAACE,SAAS,EACfC,oBAAoB,CAACH,KAAK,CAACI,IAAI,CAAC,CAAE;IAAA,CACnC,CAAC;;IAEF;IACAZ,CAAC,CAACa,SAAS,CAACN,WAAW,EAAE;MACvBO,MAAM,EAAE,EAAE;MAAE;MACZC,IAAI,EAAE,EAAE;MAAI;MACZC,OAAO,EAAE,EAAE;MAAE;MACbC,QAAQ,EAAE;QACR,GAAG,EAAE,QAAQ;QACb,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,OAAO;QACZ,GAAG,EAAE,QAAQ;QACb,GAAG,EAAE,QAAQ;QACb,GAAG,EAAE,KAAK;QACV,GAAG,EAAE,SAAS;QACd,GAAG,EAAE;MACP;IACF,CAAC,CAAC,CAACX,KAAK,CAACJ,GAAG,CAAC;;IAEb;IACA,OAAO,MAAM;MACXA,GAAG,CAACgB,MAAM,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,CAACrB,eAAe,EAAEE,MAAM,CAAC,CAAC,CAAC,CAAC;AACnC;AAACD,EAAA,CAhDQF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAkDrB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}