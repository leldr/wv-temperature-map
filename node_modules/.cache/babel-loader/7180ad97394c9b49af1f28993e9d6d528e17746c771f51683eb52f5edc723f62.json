{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendInParallel = sendInParallel;\nexports.sendMessage = sendMessage;\nvar _dgram = _interopRequireDefault(require(\"dgram\"));\nvar _net = _interopRequireDefault(require(\"net\"));\nvar _nodeUrl = _interopRequireDefault(require(\"node:url\"));\nvar _abortError = _interopRequireDefault(require(\"./errors/abort-error\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nasync function sendInParallel(addresses, port, request, signal) {\n  if (signal.aborted) {\n    throw new _abortError.default();\n  }\n  return await new Promise((resolve, reject) => {\n    const sockets = [];\n    let errorCount = 0;\n    const onError = err => {\n      errorCount++;\n      if (errorCount === addresses.length) {\n        signal.removeEventListener('abort', onAbort);\n        clearSockets();\n        reject(err);\n      }\n    };\n    const onMessage = message => {\n      signal.removeEventListener('abort', onAbort);\n      clearSockets();\n      resolve(message);\n    };\n    const onAbort = () => {\n      clearSockets();\n      reject(new _abortError.default());\n    };\n    const clearSockets = () => {\n      for (const socket of sockets) {\n        socket.removeListener('error', onError);\n        socket.removeListener('message', onMessage);\n        socket.close();\n      }\n    };\n    signal.addEventListener('abort', onAbort, {\n      once: true\n    });\n    for (let j = 0; j < addresses.length; j++) {\n      const udpType = addresses[j].family === 6 ? 'udp6' : 'udp4';\n      const socket = _dgram.default.createSocket(udpType);\n      sockets.push(socket);\n      socket.on('error', onError);\n      socket.on('message', onMessage);\n      socket.send(request, 0, request.length, port, addresses[j].address);\n    }\n  });\n}\nasync function sendMessage(host, port, lookup, signal, request) {\n  if (signal.aborted) {\n    throw new _abortError.default();\n  }\n  let addresses;\n  if (_net.default.isIP(host)) {\n    addresses = [{\n      address: host,\n      family: _net.default.isIPv6(host) ? 6 : 4\n    }];\n  } else {\n    addresses = await new Promise((resolve, reject) => {\n      const onAbort = () => {\n        reject(new _abortError.default());\n      };\n      const domainInASCII = _nodeUrl.default.domainToASCII(host);\n      lookup(domainInASCII === '' ? host : domainInASCII, {\n        all: true\n      }, (err, addresses) => {\n        signal.removeEventListener('abort', onAbort);\n        err ? reject(err) : resolve(addresses);\n      });\n    });\n  }\n  return await sendInParallel(addresses, port, request, signal);\n}","map":{"version":3,"names":["_dgram","_interopRequireDefault","require","_net","_nodeUrl","_abortError","obj","__esModule","default","sendInParallel","addresses","port","request","signal","aborted","Promise","resolve","reject","sockets","errorCount","onError","err","length","removeEventListener","onAbort","clearSockets","onMessage","message","socket","removeListener","close","addEventListener","once","j","udpType","family","createSocket","push","on","send","address","sendMessage","host","lookup","isIP","isIPv6","domainInASCII","domainToASCII","all"],"sources":["C:\\Users\\phlos\\wv-temperature-map\\src\\backend\\node_modules\\tedious\\src\\sender.ts"],"sourcesContent":["import dgram from 'dgram';\nimport dns from 'dns';\nimport net from 'net';\nimport url from 'node:url';\n\nimport AbortError from './errors/abort-error';\n\ntype LookupFunction = (hostname: string, options: dns.LookupAllOptions, callback: (err: NodeJS.ErrnoException | null, addresses: dns.LookupAddress[]) => void) => void;\n\nexport async function sendInParallel(addresses: dns.LookupAddress[], port: number, request: Buffer, signal: AbortSignal) {\n  if (signal.aborted) {\n    throw new AbortError();\n  }\n\n  return await new Promise<Buffer>((resolve, reject) => {\n    const sockets: dgram.Socket[] = [];\n\n    let errorCount = 0;\n\n    const onError = (err: Error) => {\n      errorCount++;\n\n      if (errorCount === addresses.length) {\n        signal.removeEventListener('abort', onAbort);\n        clearSockets();\n\n        reject(err);\n      }\n    };\n\n    const onMessage = (message: Buffer) => {\n      signal.removeEventListener('abort', onAbort);\n      clearSockets();\n\n      resolve(message);\n    };\n\n    const onAbort = () => {\n      clearSockets();\n\n      reject(new AbortError());\n    };\n\n    const clearSockets = () => {\n      for (const socket of sockets) {\n        socket.removeListener('error', onError);\n        socket.removeListener('message', onMessage);\n        socket.close();\n      }\n    };\n\n    signal.addEventListener('abort', onAbort, { once: true });\n\n    for (let j = 0; j < addresses.length; j++) {\n      const udpType = addresses[j].family === 6 ? 'udp6' : 'udp4';\n\n      const socket = dgram.createSocket(udpType);\n      sockets.push(socket);\n      socket.on('error', onError);\n      socket.on('message', onMessage);\n      socket.send(request, 0, request.length, port, addresses[j].address);\n    }\n  });\n}\n\nexport async function sendMessage(host: string, port: number, lookup: LookupFunction, signal: AbortSignal, request: Buffer) {\n  if (signal.aborted) {\n    throw new AbortError();\n  }\n\n  let addresses: dns.LookupAddress[];\n\n  if (net.isIP(host)) {\n    addresses = [\n      { address: host, family: net.isIPv6(host) ? 6 : 4 }\n    ];\n  } else {\n    addresses = await new Promise<dns.LookupAddress[]>((resolve, reject) => {\n      const onAbort = () => {\n        reject(new AbortError());\n      };\n\n      const domainInASCII = url.domainToASCII(host);\n      lookup(domainInASCII === '' ? host : domainInASCII, { all: true }, (err, addresses) => {\n        signal.removeEventListener('abort', onAbort);\n\n        err ? reject(err) : resolve(addresses);\n      });\n    });\n  }\n\n  return await sendInParallel(addresses, port, request, signal);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}