{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phlos\\\\wv-temperature-map\\\\src\\\\DateSelector.js\",\n  _s = $RefreshSig$();\n/**\r\n * DateSelector.js\r\n *\r\n * A React component that provides a date input for users to select a date.\r\n * Once a date is selected, it submits the selected date to fetch temperature data\r\n * from the backend for display on the map.\r\n */\n\nimport React, { useState } from 'react';\n\n/**\r\n * DateSelector component allows users to select a date and submit it.\r\n * @param {Function} fetchTemperatureData - A function to fetch temperature data for the selected date.\r\n * @returns {JSX.Element} The rendered date selector form.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateSelector = ({\n  fetchTemperatureData\n}) => {\n  _s();\n  // Local state to hold the selected date\n  const [selectedDate, setSelectedDate] = useState('');\n\n  /**\r\n   * Handles changes to the date input field.\r\n   * @param {Object} e - The event object.\r\n   */\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value); // Update selectedDate with user input\n  };\n\n  /**\r\n   * Handles form submission to fetch temperature data for the selected date.\r\n   * @param {Object} e - The event object.\r\n   */\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent page reload on form submit\n    fetchTemperatureData(selectedDate); // Call the parent function with the selected date\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: handleDateChange,\n        required: true,\n        \"aria-label\": \"Select a date for temperature data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Get Temperature Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(DateSelector, \"fv9iQcyB6nsyZauyDzuMkH9P5xs=\");\n_c = DateSelector;\nexport default DateSelector;\nvar _c;\n$RefreshReg$(_c, \"DateSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DateSelector","fetchTemperatureData","_s","selectedDate","setSelectedDate","handleDateChange","e","target","value","handleSubmit","preventDefault","onSubmit","children","type","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/phlos/wv-temperature-map/src/DateSelector.js"],"sourcesContent":["/**\r\n * DateSelector.js\r\n *\r\n * A React component that provides a date input for users to select a date.\r\n * Once a date is selected, it submits the selected date to fetch temperature data\r\n * from the backend for display on the map.\r\n */\r\n\r\nimport React, { useState } from 'react';\r\n\r\n/**\r\n * DateSelector component allows users to select a date and submit it.\r\n * @param {Function} fetchTemperatureData - A function to fetch temperature data for the selected date.\r\n * @returns {JSX.Element} The rendered date selector form.\r\n */\r\nconst DateSelector = ({ fetchTemperatureData }) => {\r\n  // Local state to hold the selected date\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n\r\n  /**\r\n   * Handles changes to the date input field.\r\n   * @param {Object} e - The event object.\r\n   */\r\n  const handleDateChange = (e) => {\r\n    setSelectedDate(e.target.value); // Update selectedDate with user input\r\n  };\r\n\r\n  /**\r\n   * Handles form submission to fetch temperature data for the selected date.\r\n   * @param {Object} e - The event object.\r\n   */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevent page reload on form submit\r\n    fetchTemperatureData(selectedDate); // Call the parent function with the selected date\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Select Date:\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          required\r\n          aria-label=\"Select a date for temperature data\"\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Get Temperature Data</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DateSelector;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAqB,CAAC,KAAK;EAAAC,EAAA;EACjD;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEpD;AACF;AACA;AACA;EACE,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,eAAe,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EACnC,CAAC;;EAED;AACF;AACA;AACA;EACE,MAAMC,YAAY,GAAIH,CAAC,IAAK;IAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC,CAAC,CAAC;IACpBT,oBAAoB,CAACE,YAAY,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,oBACEJ,OAAA;IAAMY,QAAQ,EAAEF,YAAa;IAAAG,QAAA,gBAC3Bb,OAAA;MAAAa,QAAA,GAAO,cAEL,eAAAb,OAAA;QACEc,IAAI,EAAC,MAAM;QACXL,KAAK,EAAEL,YAAa;QACpBW,QAAQ,EAAET,gBAAiB;QAC3BU,QAAQ;QACR,cAAW;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRpB,OAAA;MAAQc,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAoB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEX,CAAC;AAACjB,EAAA,CApCIF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}