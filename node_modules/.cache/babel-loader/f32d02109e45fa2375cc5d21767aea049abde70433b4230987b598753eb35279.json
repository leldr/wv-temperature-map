{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phlos\\\\wv-temperature-map\\\\src\\\\DateSelector.js\",\n  _s = $RefreshSig$();\n/**\r\n * DateSelector.js\r\n * \r\n * Component for selecting a month and year, automatically setting the date to the first day of the month.\r\n */\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DateSelector({\n  fetchTemperatureData\n}) {\n  _s();\n  const currentYear = new Date().getFullYear();\n  const years = Array.from({\n    length: currentYear - 1950 + 1\n  }, (_, i) => 1951 + i); // Years from 1951 to current year\n\n  const [selectedMonth, setSelectedMonth] = useState('01'); // Default to January\n  const [selectedYear, setSelectedYear] = useState(currentYear); // Default to current year\n\n  // Helper to handle fetching with formatted date string\n  const handleFetchData = () => {\n    const date = `${selectedYear}-${selectedMonth}-01`; // First day of the month\n    console.lo;\n    fetchTemperatureData(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select Month and Year: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedMonth,\n      onChange: e => setSelectedMonth(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"01\",\n        children: \"January\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"02\",\n        children: \"February\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"03\",\n        children: \"March\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"04\",\n        children: \"April\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"05\",\n        children: \"May\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"06\",\n        children: \"June\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"07\",\n        children: \"July\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"08\",\n        children: \"August\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"09\",\n        children: \"September\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"10\",\n        children: \"October\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"11\",\n        children: \"November\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"12\",\n        children: \"December\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedYear,\n      onChange: e => setSelectedYear(e.target.value),\n      children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: year,\n        children: year\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchData,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(DateSelector, \"D+1/N5ojxg5ikXx5Wz+RMFFCsWc=\");\n_c = DateSelector;\nexport default DateSelector;\nvar _c;\n$RefreshReg$(_c, \"DateSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DateSelector","fetchTemperatureData","_s","currentYear","Date","getFullYear","years","Array","from","length","_","i","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","handleFetchData","date","console","lo","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","year","onClick","_c","$RefreshReg$"],"sources":["C:/Users/phlos/wv-temperature-map/src/DateSelector.js"],"sourcesContent":["/**\r\n * DateSelector.js\r\n * \r\n * Component for selecting a month and year, automatically setting the date to the first day of the month.\r\n */\r\n\r\nimport React, { useState } from 'react';\r\n\r\nfunction DateSelector({ fetchTemperatureData }) {\r\n    const currentYear = new Date().getFullYear();\r\n    const years = Array.from({ length: currentYear - 1950 + 1 }, (_, i) => 1951 + i); // Years from 1951 to current year\r\n\r\n    const [selectedMonth, setSelectedMonth] = useState('01'); // Default to January\r\n    const [selectedYear, setSelectedYear] = useState(currentYear); // Default to current year\r\n\r\n    // Helper to handle fetching with formatted date string\r\n    const handleFetchData = () => {\r\n        const date = `${selectedYear}-${selectedMonth}-01`; // First day of the month\r\n        console.lo\r\n        fetchTemperatureData(date);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label>Select Month and Year: </label>\r\n            <select\r\n                value={selectedMonth}\r\n                onChange={(e) => setSelectedMonth(e.target.value)}\r\n            >\r\n                <option value=\"01\">January</option>\r\n                <option value=\"02\">February</option>\r\n                <option value=\"03\">March</option>\r\n                <option value=\"04\">April</option>\r\n                <option value=\"05\">May</option>\r\n                <option value=\"06\">June</option>\r\n                <option value=\"07\">July</option>\r\n                <option value=\"08\">August</option>\r\n                <option value=\"09\">September</option>\r\n                <option value=\"10\">October</option>\r\n                <option value=\"11\">November</option>\r\n                <option value=\"12\">December</option>\r\n            </select>\r\n            <select\r\n                value={selectedYear}\r\n                onChange={(e) => setSelectedYear(e.target.value)}\r\n            >\r\n                {years.map((year) => (\r\n                    <option key={year} value={year}>{year}</option>\r\n                ))}\r\n            </select>\r\n            <button onClick={handleFetchData}>Fetch Data</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DateSelector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}