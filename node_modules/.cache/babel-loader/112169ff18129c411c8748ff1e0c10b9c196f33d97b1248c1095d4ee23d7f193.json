{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phlos\\\\wv-temperature-map\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\n/**\r\n * Register.js\r\n * \r\n * This component provides a registration form for new users. It sends \r\n * the registration details to the backend, and if successful, redirects to the login page.\r\n */\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n/**\r\n * Register component allows new users to create an account.\r\n * @returns {JSX.Element} The registration form.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  /**\r\n   * Handles form submission by sending registration details to the backend.\r\n   * @param {Object} e - Event object from the form submission.\r\n   */\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/auth/register', {\n        username,\n        password\n      }, {\n        withCredentials: true\n      });\n      if (response.data.message === 'User registered successfully') {\n        alert('Registration successful');\n        navigate('/'); // Navigate to login page after registration\n      }\n    } catch (error) {\n      console.error('Registration failed:', error);\n      alert('Error registering user');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleRegister,\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxWidth: '300px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","navigate","handleRegister","e","preventDefault","response","post","withCredentials","data","message","alert","error","console","onSubmit","style","display","flexDirection","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/phlos/wv-temperature-map/src/Register.js"],"sourcesContent":["/**\r\n * Register.js\r\n * \r\n * This component provides a registration form for new users. It sends \r\n * the registration details to the backend, and if successful, redirects to the login page.\r\n */\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n/**\r\n * Register component allows new users to create an account.\r\n * @returns {JSX.Element} The registration form.\r\n */\r\nconst Register = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n  /**\r\n   * Handles form submission by sending registration details to the backend.\r\n   * @param {Object} e - Event object from the form submission.\r\n   */\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'http://localhost:5000/auth/register',\r\n        { username, password },\r\n        { withCredentials: true }\r\n      );\r\n\r\n      if (response.data.message === 'User registered successfully') {\r\n        alert('Registration successful');\r\n        navigate('/'); // Navigate to login page after registration\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n      alert('Error registering user');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleRegister} style={{ display: 'flex', flexDirection: 'column', maxWidth: '300px' }}>\r\n      <h2>Register</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B;AACF;AACA;AACA;EACE,MAAMU,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAC/B,qCAAqC,EACrC;QAAET,QAAQ;QAAEE;MAAS,CAAC,EACtB;QAAEQ,eAAe,EAAE;MAAK,CAC1B,CAAC;MAED,IAAIF,QAAQ,CAACG,IAAI,CAACC,OAAO,KAAK,8BAA8B,EAAE;QAC5DC,KAAK,CAAC,yBAAyB,CAAC;QAChCT,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACjB;IACF,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CD,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF,CAAC;EAED,oBACEhB,OAAA;IAAMmB,QAAQ,EAAEX,cAAe;IAACY,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBACrGxB,OAAA;MAAAwB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB5B,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE5B,QAAS;MAChB6B,QAAQ,EAAGvB,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACF5B,OAAA;MACE6B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE1B,QAAS;MAChB2B,QAAQ,EAAGvB,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACF5B,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAAC1B,EAAA,CA9CID,QAAQ;EAAA,QAGKH,WAAW;AAAA;AAAAoC,EAAA,GAHxBjC,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}