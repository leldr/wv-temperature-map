{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phlos\\\\wv-temperature-map\\\\src\\\\MapComponent.js\";\n/**\r\n * MapComponent.js\r\n * \r\n * React component that renders a map with color-coded markers for temperature data.\r\n * Each marker represents a location with latitude, longitude, and temperature (tavg),\r\n * and displays this information in a popup.\r\n */\n\nimport React from 'react';\nimport { MapContainer, TileLayer, CircleMarker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n/**\r\n * MapComponent\r\n * \r\n * Renders a map with markers based on temperature data.\r\n * Each marker is color-coded based on the average temperature (tavg) and includes a popup\r\n * with details for latitude, longitude, and temperature.\r\n * \r\n * @component\r\n * @param {Object[]} temperatureData - Array of objects with latitude, longitude, and tavg values.\r\n * @returns {JSX.Element} A map with temperature markers and popups.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapComponent({\n  temperatureData\n}) {\n  const center = [38.5976, -80.4549]; // Center of WV\n\n  /**\r\n   * getColor\r\n   * \r\n   * Determines the color for the marker based on temperature.\r\n   * \r\n   * @function\r\n   * @param {number} tavg - The average temperature value.\r\n   * @returns {string} Color code for the marker.\r\n   */\n  const getColor = tavg => {\n    if (tavg < 0) return \"#0000FF\"; // Cold temperatures (blue)\n    if (tavg < 15) return \"#ADD8E6\"; // Cool temperatures (light blue)\n    if (tavg < 30) return \"#FFFF00\"; // Warm temperatures (yellow)\n    return \"#FF0000\"; // Hot temperatures (red)\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: center,\n    zoom: 7,\n    style: {\n      height: '500px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), temperatureData.map((point, index) => /*#__PURE__*/_jsxDEV(CircleMarker, {\n      center: [point.latitude, point.longitude],\n      radius: 5,\n      color: getColor(point.tavg),\n      fillOpacity: 0.6,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Latitude: \", point.latitude]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Longitude: \", point.longitude]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Avg Temp: \", point.tavg, \" \\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","MapContainer","TileLayer","CircleMarker","Popup","jsxDEV","_jsxDEV","MapComponent","temperatureData","center","getColor","tavg","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","point","index","latitude","longitude","radius","color","fillOpacity","_c","$RefreshReg$"],"sources":["C:/Users/phlos/wv-temperature-map/src/MapComponent.js"],"sourcesContent":["/**\r\n * MapComponent.js\r\n * \r\n * React component that renders a map with color-coded markers for temperature data.\r\n * Each marker represents a location with latitude, longitude, and temperature (tavg),\r\n * and displays this information in a popup.\r\n */\r\n\r\nimport React from 'react';\r\nimport { MapContainer, TileLayer, CircleMarker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n/**\r\n * MapComponent\r\n * \r\n * Renders a map with markers based on temperature data.\r\n * Each marker is color-coded based on the average temperature (tavg) and includes a popup\r\n * with details for latitude, longitude, and temperature.\r\n * \r\n * @component\r\n * @param {Object[]} temperatureData - Array of objects with latitude, longitude, and tavg values.\r\n * @returns {JSX.Element} A map with temperature markers and popups.\r\n */\r\nfunction MapComponent({ temperatureData }) {\r\n    const center = [38.5976, -80.4549]; // Center of WV\r\n\r\n    /**\r\n     * getColor\r\n     * \r\n     * Determines the color for the marker based on temperature.\r\n     * \r\n     * @function\r\n     * @param {number} tavg - The average temperature value.\r\n     * @returns {string} Color code for the marker.\r\n     */\r\n    const getColor = (tavg) => {\r\n        if (tavg < 0) return \"#0000FF\";  // Cold temperatures (blue)\r\n        if (tavg < 15) return \"#ADD8E6\"; // Cool temperatures (light blue)\r\n        if (tavg < 30) return \"#FFFF00\"; // Warm temperatures (yellow)\r\n        return \"#FF0000\";                // Hot temperatures (red)\r\n    };\r\n\r\n    return (\r\n        <MapContainer center={center} zoom={7} style={{ height: '500px', width: '100%' }}>\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            {temperatureData.map((point, index) => (\r\n                <CircleMarker\r\n                    key={index}\r\n                    center={[point.latitude, point.longitude]}\r\n                    radius={5}\r\n                    color={getColor(point.tavg)}\r\n                    fillOpacity={0.6}\r\n                >\r\n                    <Popup>\r\n                        <div>\r\n                            <p>Latitude: {point.latitude}</p>\r\n                            <p>Longitude: {point.longitude}</p>\r\n                            <p>Avg Temp: {point.tavg} Â°C</p>\r\n                        </div>\r\n                    </Popup>\r\n                </CircleMarker>\r\n            ))}\r\n        </MapContainer>\r\n    );\r\n}\r\n\r\nexport default MapComponent;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,YAAY,EAAEC,KAAK,QAAQ,eAAe;AAC5E,OAAO,0BAA0B;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA,SAAAC,MAAA,IAAAC,OAAA;AAWA,SAASC,YAAYA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EACvC,MAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;;EAEpC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMC,QAAQ,GAAIC,IAAI,IAAK;IACvB,IAAIA,IAAI,GAAG,CAAC,EAAE,OAAO,SAAS,CAAC,CAAE;IACjC,IAAIA,IAAI,GAAG,EAAE,EAAE,OAAO,SAAS,CAAC,CAAC;IACjC,IAAIA,IAAI,GAAG,EAAE,EAAE,OAAO,SAAS,CAAC,CAAC;IACjC,OAAO,SAAS,CAAC,CAAgB;EACrC,CAAC;EAED,oBACIL,OAAA,CAACL,YAAY;IAACQ,MAAM,EAAEA,MAAO;IAACG,IAAI,EAAE,CAAE;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC7EV,OAAA,CAACJ,SAAS;MACNe,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxG,CAAC,EACDd,eAAe,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC9BnB,OAAA,CAACH,YAAY;MAETM,MAAM,EAAE,CAACe,KAAK,CAACE,QAAQ,EAAEF,KAAK,CAACG,SAAS,CAAE;MAC1CC,MAAM,EAAE,CAAE;MACVC,KAAK,EAAEnB,QAAQ,CAACc,KAAK,CAACb,IAAI,CAAE;MAC5BmB,WAAW,EAAE,GAAI;MAAAd,QAAA,eAEjBV,OAAA,CAACF,KAAK;QAAAY,QAAA,eACFV,OAAA;UAAAU,QAAA,gBACIV,OAAA;YAAAU,QAAA,GAAG,YAAU,EAACQ,KAAK,CAACE,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjChB,OAAA;YAAAU,QAAA,GAAG,aAAW,EAACQ,KAAK,CAACG,SAAS;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnChB,OAAA;YAAAU,QAAA,GAAG,YAAU,EAACQ,KAAK,CAACb,IAAI,EAAC,QAAG;UAAA;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,GAZHG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaA,CACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEvB;AAACS,EAAA,GA5CQxB,YAAY;AA8CrB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}