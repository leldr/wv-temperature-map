{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phlos\\\\wv-temperature-map\\\\src\\\\MapPage.js\",\n  _s = $RefreshSig$();\n/**\r\n * MapPage.js\r\n *\r\n * A React component that renders a page with a date selector and a map.\r\n * Users can select a date, which triggers a fetch request to the backend\r\n * to retrieve temperature data for that specific date. The data is then\r\n * displayed on the map.\r\n */\n\nimport React, { useState } from 'react';\nimport DateSelector from './DateSelector';\nimport MapComponent from './MapComponent';\n\n/**\r\n * MapPage component that handles user-selected date input, fetches temperature data\r\n * from the backend, and displays it on a map.\r\n * @returns {JSX.Element} The rendered MapPage with a date selector and map.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapPage = () => {\n  _s();\n  // State to store temperature data returned from the backend\n  const [temperatureData, setTemperatureData] = useState([]);\n\n  /**\r\n   * Fetches temperature data from the backend for a specific date.\r\n   * @param {string} date - The selected date in YYYY-MM-DD format.\r\n   */\n  const fetchTemperatureData = async date => {\n    try {\n      // Send a request to the backend API with the selected date\n      const response = await fetch(`/api/temperature/${date}`);\n      const data = await response.json();\n\n      // Update the temperatureData state with the fetched data\n      setTemperatureData(data);\n    } catch (error) {\n      console.error(\"Error fetching temperature data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Temperature Data for Selected Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateSelector, {\n      fetchTemperatureData: fetchTemperatureData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n      temperatures: temperatureData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MapPage, \"A4E+Pi2aE7tuuNpCjdIZpkTxzS8=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","DateSelector","MapComponent","jsxDEV","_jsxDEV","MapPage","_s","temperatureData","setTemperatureData","fetchTemperatureData","date","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","temperatures","_c","$RefreshReg$"],"sources":["C:/Users/phlos/wv-temperature-map/src/MapPage.js"],"sourcesContent":["/**\r\n * MapPage.js\r\n *\r\n * A React component that renders a page with a date selector and a map.\r\n * Users can select a date, which triggers a fetch request to the backend\r\n * to retrieve temperature data for that specific date. The data is then\r\n * displayed on the map.\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport DateSelector from './DateSelector';\r\nimport MapComponent from './MapComponent';\r\n\r\n/**\r\n * MapPage component that handles user-selected date input, fetches temperature data\r\n * from the backend, and displays it on a map.\r\n * @returns {JSX.Element} The rendered MapPage with a date selector and map.\r\n */\r\nconst MapPage = () => {\r\n  // State to store temperature data returned from the backend\r\n  const [temperatureData, setTemperatureData] = useState([]);\r\n\r\n  /**\r\n   * Fetches temperature data from the backend for a specific date.\r\n   * @param {string} date - The selected date in YYYY-MM-DD format.\r\n   */\r\n  const fetchTemperatureData = async (date) => {\r\n    try {\r\n      // Send a request to the backend API with the selected date\r\n      const response = await fetch(`/api/temperature/${date}`);\r\n      const data = await response.json();\r\n      \r\n      // Update the temperatureData state with the fetched data\r\n      setTemperatureData(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching temperature data:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Temperature Data for Selected Date</h1>\r\n      {/* DateSelector component allows user to select a date and fetch data */}\r\n      <DateSelector fetchTemperatureData={fetchTemperatureData} />\r\n      \r\n      {/* MapComponent displays the temperature data on the map */}\r\n      <MapComponent temperatures={temperatureData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;;AAEzC;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE1D;AACF;AACA;AACA;EACE,MAAMS,oBAAoB,GAAG,MAAOC,IAAI,IAAK;IAC3C,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoBF,IAAI,EAAE,CAAC;MACxD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;MAElC;MACAN,kBAAkB,CAACK,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3CjB,OAAA,CAACH,YAAY;MAACQ,oBAAoB,EAAEA;IAAqB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG5DjB,OAAA,CAACF,YAAY;MAACoB,YAAY,EAAEf;IAAgB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAACf,EAAA,CA/BID,OAAO;AAAAkB,EAAA,GAAPlB,OAAO;AAiCb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}