{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phlos\\\\wv-temperature-map\\\\src\\\\DateSelector.js\";\n/**\r\n * DateSelector.js\r\n * \r\n * Component for selecting a date and triggering data fetch based on that date.\r\n */\n\nimport React from 'react';\n\n/**\r\n * DateSelector component\r\n * \r\n * Allows user to select a date and fetch data for that specific date.\r\n * @param {string} date - The selected date in the format YYYY-MM-DD.\r\n * @param {Function} setDate - Function to update the date state in MapPage.\r\n * @param {Function} fetchTemperatureData - Function to fetch temperature data based on selected date.\r\n * @returns {JSX.Element} Rendered DateSelector component.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateSelector = ({\n  date,\n  setDate,\n  fetchTemperatureData\n}) => {\n  /**\r\n   * handleDateChange\r\n   * \r\n   * Updates the date when a new date is selected from the input.\r\n   * \r\n   * @param {Object} e - Event object from date input.\r\n   */\n  const handleDateChange = e => {\n    setDate(e.target.value); // Update date state in MapPage\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTemperatureData,\n      children: \"Get Temperature Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = DateSelector;\nexport default DateSelector;\nvar _c;\n$RefreshReg$(_c, \"DateSelector\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DateSelector","date","setDate","fetchTemperatureData","handleDateChange","e","target","value","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/phlos/wv-temperature-map/src/DateSelector.js"],"sourcesContent":["/**\r\n * DateSelector.js\r\n * \r\n * Component for selecting a date and triggering data fetch based on that date.\r\n */\r\n\r\nimport React from 'react';\r\n\r\n/**\r\n * DateSelector component\r\n * \r\n * Allows user to select a date and fetch data for that specific date.\r\n * @param {string} date - The selected date in the format YYYY-MM-DD.\r\n * @param {Function} setDate - Function to update the date state in MapPage.\r\n * @param {Function} fetchTemperatureData - Function to fetch temperature data based on selected date.\r\n * @returns {JSX.Element} Rendered DateSelector component.\r\n */\r\nconst DateSelector = ({ date, setDate, fetchTemperatureData }) => {\r\n\r\n  /**\r\n   * handleDateChange\r\n   * \r\n   * Updates the date when a new date is selected from the input.\r\n   * \r\n   * @param {Object} e - Event object from date input.\r\n   */\r\n  const handleDateChange = (e) => {\r\n    setDate(e.target.value);  // Update date state in MapPage\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Date input field */}\r\n      <input\r\n        type=\"date\"\r\n        value={date}\r\n        onChange={handleDateChange}\r\n      />\r\n      {/* Button to fetch data for selected date */}\r\n      <button onClick={fetchTemperatureData}>Get Temperature Data</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateSelector;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,SAAAC,MAAA,IAAAC,OAAA;AASA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAqB,CAAC,KAAK;EAEhE;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9BH,OAAO,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAE;EAC5B,CAAC;EAED,oBACER,OAAA;IAAAS,QAAA,gBAEET,OAAA;MACEU,IAAI,EAAC,MAAM;MACXF,KAAK,EAAEN,IAAK;MACZS,QAAQ,EAAEN;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAEFf,OAAA;MAAQgB,OAAO,EAAEZ,oBAAqB;MAAAK,QAAA,EAAC;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV,CAAC;AAACE,EAAA,GAzBIhB,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}