{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phlos\\\\wv-temperature-map\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\n/**\r\n * MapComponent.js\r\n * \r\n * React component that renders a heatmap for temperature data using Leaflet.\r\n * Each point represents a location with latitude, longitude, and temperature (tavg),\r\n * and displays this information in a popup when clicked.\r\n */\n\nimport React, { useEffect, useMemo } from 'react';\n// Import the Leaflet library to handle map rendering, tile layers, and geographic data visualization.\nimport L from 'leaflet'; // Import the Leaflet library\nimport 'leaflet/dist/leaflet.css'; // Import Leaflet's CSS\nimport 'leaflet.heat'; // Import Leaflet Heatmap plugin\n\n/**\r\n * MapComponent\r\n * \r\n * Renders a map with heatmap visualization for temperature data.\r\n * Each point includes a popup with details for latitude, longitude, and temperature.\r\n * \r\n * @component\r\n * @param {Object[]} [temperatures=[]] - Array of objects with latitude, longitude, and tavg values.\r\n * @returns {JSX.Element} A map with heatmap and optional markers for additional data.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapComponent({\n  temperatures = []\n}) {\n  _s();\n  const center = useMemo(() => [38.5976, -80.4549], []); // Center of WV\n\n  useEffect(() => {\n    if (temperatures.length === 0) return; // Skip rendering if no temperature data available\n\n    require('leaflet.heat');\n\n    // Initialize the map\n    const map = L.map('heatmap').setView(center, 7);\n\n    // Add OpenStreetMap tile layer\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n\n    // Transform temperatures into heatmap points ([latitude, longitude, intensity])\n    const heatmapData = temperatures.map(point => [point.latitude, point.longitude, point.tavg]);\n\n    // Add heatmap layer\n    L.heatLayer(heatmapData, {\n      radius: 40,\n      blur: 15,\n      maxZoom: 10,\n      gradient: {\n        0.0: 'purple',\n        0.1: 'blue',\n        0.2: 'cyan',\n        0.3: 'lime',\n        0.4: 'green',\n        0.5: 'yellow',\n        0.6: 'orange',\n        0.7: 'red',\n        0.8: 'darkred',\n        1.0: 'black'\n      }\n    }).addTo(map);\n\n    // Cleanup on component unmount\n    return () => {\n      map.remove();\n    };\n  }, [temperatures, center]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"heatmap\",\n    style: {\n      height: '500px',\n      width: '100%'\n    },\n    children: temperatures.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: \"Please select a date to fetch and display the heatmap.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(MapComponent, \"lOLz1YGvdjlguaSIJndYQiQUs0o=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useMemo","L","jsxDEV","_jsxDEV","MapComponent","temperatures","_s","center","length","require","map","setView","tileLayer","attribution","addTo","heatmapData","point","latitude","longitude","tavg","heatLayer","radius","blur","maxZoom","gradient","remove","id","style","height","width","children","textAlign","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/phlos/wv-temperature-map/src/MapComponent.js"],"sourcesContent":["/**\r\n * MapComponent.js\r\n * \r\n * React component that renders a heatmap for temperature data using Leaflet.\r\n * Each point represents a location with latitude, longitude, and temperature (tavg),\r\n * and displays this information in a popup when clicked.\r\n */\r\n\r\nimport React, { useEffect, useMemo } from 'react';\r\n// Import the Leaflet library to handle map rendering, tile layers, and geographic data visualization.\r\nimport L from 'leaflet'; // Import the Leaflet library\r\nimport 'leaflet/dist/leaflet.css'; // Import Leaflet's CSS\r\nimport 'leaflet.heat'; // Import Leaflet Heatmap plugin\r\n\r\n\r\n\r\n/**\r\n * MapComponent\r\n * \r\n * Renders a map with heatmap visualization for temperature data.\r\n * Each point includes a popup with details for latitude, longitude, and temperature.\r\n * \r\n * @component\r\n * @param {Object[]} [temperatures=[]] - Array of objects with latitude, longitude, and tavg values.\r\n * @returns {JSX.Element} A map with heatmap and optional markers for additional data.\r\n */\r\nfunction MapComponent({ temperatures = [] }) {\r\n    const center = useMemo(() => [38.5976, -80.4549], []); // Center of WV\r\n\r\n    useEffect(() => {\r\n        if (temperatures.length === 0) return; // Skip rendering if no temperature data available\r\n\r\n        require('leaflet.heat');\r\n\r\n        // Initialize the map\r\n        const map = L.map('heatmap').setView(center, 7);\r\n\r\n        // Add OpenStreetMap tile layer\r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n        }).addTo(map);\r\n\r\n        // Transform temperatures into heatmap points ([latitude, longitude, intensity])\r\n        const heatmapData = temperatures.map((point) => [\r\n            point.latitude,\r\n            point.longitude,\r\n            point.tavg\r\n        ]);\r\n\r\n        // Add heatmap layer\r\n        L.heatLayer(heatmapData, {\r\n            radius: 40,\r\n            blur: 15,\r\n            maxZoom: 10,\r\n            gradient: {\r\n                    0.0: 'purple',\r\n                    0.1: 'blue',\r\n                    0.2: 'cyan',\r\n                    0.3: 'lime',\r\n                    0.4: 'green',\r\n                    0.5: 'yellow',\r\n                    0.6: 'orange',\r\n                    0.7: 'red',\r\n                    0.8: 'darkred',\r\n                    1.0: 'black'\r\n            },\r\n        }).addTo(map);\r\n\r\n        // Cleanup on component unmount\r\n        return () => {\r\n            map.remove();\r\n        };\r\n    }, [temperatures, center]);\r\n\r\n    return (\r\n        <div id=\"heatmap\" style={{ height: '500px', width: '100%' }}>\r\n            {temperatures.length === 0 && (\r\n                <p style={{ textAlign: 'center', marginTop: '20px' }}>\r\n                    Please select a date to fetch and display the heatmap.\r\n                </p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MapComponent;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AACjD;AACA,OAAOC,CAAC,MAAM,SAAS,CAAC,CAAC;AACzB,OAAO,0BAA0B,CAAC,CAAC;AACnC,OAAO,cAAc,CAAC,CAAC;;AAIvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,SAAAC,MAAA,IAAAC,OAAA;AAUA,SAASC,YAAYA,CAAC;EAAEC,YAAY,GAAG;AAAG,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAMC,MAAM,GAAGP,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAEvDD,SAAS,CAAC,MAAM;IACZ,IAAIM,YAAY,CAACG,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;;IAEvCC,OAAO,CAAC,cAAc,CAAC;;IAEvB;IACA,MAAMC,GAAG,GAAGT,CAAC,CAACS,GAAG,CAAC,SAAS,CAAC,CAACC,OAAO,CAACJ,MAAM,EAAE,CAAC,CAAC;;IAE/C;IACAN,CAAC,CAACW,SAAS,CAAC,oDAAoD,EAAE;MAC9DC,WAAW,EAAE;IACjB,CAAC,CAAC,CAACC,KAAK,CAACJ,GAAG,CAAC;;IAEb;IACA,MAAMK,WAAW,GAAGV,YAAY,CAACK,GAAG,CAAEM,KAAK,IAAK,CAC5CA,KAAK,CAACC,QAAQ,EACdD,KAAK,CAACE,SAAS,EACfF,KAAK,CAACG,IAAI,CACb,CAAC;;IAEF;IACAlB,CAAC,CAACmB,SAAS,CAACL,WAAW,EAAE;MACrBM,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;QACF,GAAG,EAAE,QAAQ;QACb,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,OAAO;QACZ,GAAG,EAAE,QAAQ;QACb,GAAG,EAAE,QAAQ;QACb,GAAG,EAAE,KAAK;QACV,GAAG,EAAE,SAAS;QACd,GAAG,EAAE;MACb;IACJ,CAAC,CAAC,CAACV,KAAK,CAACJ,GAAG,CAAC;;IAEb;IACA,OAAO,MAAM;MACTA,GAAG,CAACe,MAAM,CAAC,CAAC;IAChB,CAAC;EACL,CAAC,EAAE,CAACpB,YAAY,EAAEE,MAAM,CAAC,CAAC;EAE1B,oBACIJ,OAAA;IAAKuB,EAAE,EAAC,SAAS;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,EACvDzB,YAAY,CAACG,MAAM,KAAK,CAAC,iBACtBL,OAAA;MAAGwB,KAAK,EAAE;QAAEI,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAEtD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAC9B,EAAA,CAzDQF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AA2DrB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}